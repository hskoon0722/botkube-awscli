name: Deploy Botkube plugins on GitHub Release (release)

on:
  push:
    tags: ["*"]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true
          version: latest

      # 실제로 dist/* 만들어야 합니다
      - name: Build plugins (snapshot)
        run: goreleaser build --clean --snapshot

      - name: Generate plugins index.yaml
        shell: bash
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF#refs/tags/}"
          BASE="https://github.com/${GITHUB_REPOSITORY}/releases/download/${TAG}"

          echo "URL BASE: $BASE"
          ls -l ./dist || true

          NAME="aws"
          TYPE="executor"
          DESC="Run AWS CLI from chat."
          VERSION="0.1.0"

          {
            echo "entries:"
            echo "  - name: ${NAME}"
            echo "    type: ${TYPE}"
            echo "    description: ${DESC}"
            echo "    version: ${VERSION}"
            echo "    urls:"
            if [ -f dist/executor_aws_linux_amd64 ]; then
              cat <<EOF
    - url: ${BASE}/executor_aws_linux_amd64
      platform:
        os: linux
        architecture: amd64
EOF
            fi
            if [ -f dist/executor_aws_linux_arm64 ]; then
              cat <<EOF
    - url: ${BASE}/executor_aws_linux_arm64
      platform:
        os: linux
        architecture: arm64
EOF
            fi
            echo "    jsonSchema:"
            echo "      value: |-"
            # JSON은 변수에 안 넣고 바로 heredoc -> sed 로 들여쓰기만
            cat <<'JSON' | sed 's/^/        /'
{
  "$schema":"http://json-schema.org/draft-04/schema#",
  "title":"aws",
  "type":"object",
  "properties":{
    "defaultRegion":{"type":"string"},
    "prependArgs":{"type":"array","items":{"type":"string"}},
    "allowed":{"type":"array","items":{"type":"string"}},
    "env":{"type":"object","additionalProperties":{"type":"string"}}
  },
  "additionalProperties": false
}
JSON
            echo "    recommended: false"
          } > plugins-index.yaml

          echo "----- GENERATED INDEX -----"
          sed -n '1,200p' plugins-index.yaml

      - name: Release description
        env:
          PLUGIN_DOWNLOAD_URL_BASE_PATH: "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}"
        run: |
          cat << EOF > release.md
          Botkube Plugins **${GITHUB_REF#refs/tags/}** are now available!
          To use them:
          ```yaml
          plugins:
            repositories:
              ${{ github.event.repository.name }}:
                url: ${PLUGIN_DOWNLOAD_URL_BASE_PATH}/plugins-index.yaml
          ```
          EOF

      - name: Create or update GitHub release
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          gh release view "$TAG" >/dev/null 2>&1 || gh release create "$TAG" --notes-file release.md

          shopt -s nullglob
          assets=(dist/executor_* plugins-index.yaml)
          if ((${#assets[@]})); then
            gh release upload "$TAG" "${assets[@]}" --clobber
          fi
